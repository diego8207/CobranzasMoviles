package co.macrosystem.cobranzasmoviles.db;import android.content.ContentValues;import android.content.Context;import android.database.Cursor;import android.database.sqlite.SQLiteDatabase;import android.database.sqlite.SQLiteOpenHelper;import android.graphics.Bitmap;import android.util.Log;import java.util.ArrayList;import co.macrosystem.cobranzasmoviles.DbBitmapUtility;import co.macrosystem.cobranzasmoviles.pojo.Suspension;import static co.macrosystem.cobranzasmoviles.db.ConstantesBaseDatos.DATABASE_NAME;import static co.macrosystem.cobranzasmoviles.db.ConstantesBaseDatos.DATABASE_VERSION;import static co.macrosystem.cobranzasmoviles.db.ConstantesBaseDatos.TABLE_FOTOS;import static co.macrosystem.cobranzasmoviles.db.ConstantesBaseDatos.TABLE_SUSPENSIONES;public class BaseDatos extends SQLiteOpenHelper{    private Context context;    public BaseDatos(Context context) {        super(context, DATABASE_NAME, null, DATABASE_VERSION);        this.context = context;    }    @Override    public void onCreate(SQLiteDatabase db) {        String queryCrearTablaPersona = "CREATE TABLE "                 + ConstantesBaseDatos.TABLE_PERSONA + "(" +                ConstantesBaseDatos.TABLE_PERSONA_IDENTIFICACION        + " TEXT PRIMARY KEY, " +                ConstantesBaseDatos.TABLE_PERSONA_TIPODOC               + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_NOMBRES               + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_APELLIDOS             + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_SEXO                  + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_FECHANACIMIENTO       + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_TELEFONO              + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_EMAIL                 + " TEXT, " +                ConstantesBaseDatos.TABLE_PERSONA_DIRECCION             + " TEXT  " +                ")";        String queryCrearTablaUsuario = "CREATE TABLE "                 + ConstantesBaseDatos.TABLE_USUARIO + "(" +                ConstantesBaseDatos.TABLE_USUARIO_USUARIO               + " TEXT PRIMARY KEY, " +                ConstantesBaseDatos.TABLE_USUARIO_IDENTIFICACION        + " TEXT, " +                ConstantesBaseDatos.TABLE_USUARIO_PASSWORD              + " TEXT, " +                ConstantesBaseDatos.TABLE_USUARIO_FECHAINI              + " TEXT, " +                ConstantesBaseDatos.TABLE_USUARIO_FECHAFIN              + " TEXT, " +                ConstantesBaseDatos.TABLE_USUARIO_ESTADO                + " TEXT, " +                "FOREIGN KEY ("+ ConstantesBaseDatos.TABLE_USUARIO_IDENTIFICACION + ") REFERENCES " +                    ConstantesBaseDatos.TABLE_PERSONA + "(" + ConstantesBaseDatos.TABLE_PERSONA_IDENTIFICACION + "))";        String queryCrearTablaSuspension = "CREATE TABLE " + ConstantesBaseDatos.TABLE_SUSPENSIONES + "(" +                ConstantesBaseDatos.TABLE_SUSPENSIONES_MATRICULA        + " TEXT PRIMARY KEY, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_NUM_PROCESO      + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_NUM_MEDIDOR      + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_SUSCRIPTOR       + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_CICLO            + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_MUNICIPIO        + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_DIRECCION        + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_FECHA_ACTIVIDAD  + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_TIPO_ACTIVIDAD   + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_COD_ACCION       + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_DESCR_ACCION     + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_COD_TECNICO      + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_GLOSA            + " TEXT, " +                ConstantesBaseDatos.TABLE_SUSPENSIONES_PROVEEDOR        + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_USUARIO          + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_ESTADO           + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_NUM_STICKER      + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_ESTADO_STICKER   + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_SELLOSERIAL      + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_SELLOSERIAL_ESTA + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_COINC_MAT_MEDI   + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_CON_PAGO         + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_TIENE_ENERGIA    + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_LECTURA          + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_NOM_CONTACTO     + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_NUM_CONTACTO     + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_OBSERVACIONES    + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_RECHAZADO        + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_FOTO             + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_LATITUD          + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_LONGITUD         + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_FECHA_EJECU      + " TEXT, "  +                ConstantesBaseDatos.TABLE_SUSPENSIONES_FECHA_CARGA      + " TEXT, "  +                "FOREIGN KEY ("+ ConstantesBaseDatos.TABLE_SUSPENSIONES_USUARIO + ") REFERENCES " +                ConstantesBaseDatos.TABLE_USUARIO + "("+ConstantesBaseDatos.TABLE_USUARIO_USUARIO + "))";        String queryCrearTablaFotos = "CREATE TABLE " + ConstantesBaseDatos.TABLE_FOTOS + "(" +                ConstantesBaseDatos.TABLE_FOTOS_ID                       + " INTEGER PRIMARY KEY AUTOINCREMENT, " +                ConstantesBaseDatos.TABLE_FOTOS_FOTOBLOB                 + " BLOB, " +                ConstantesBaseDatos.TABLE_FOTOS_SUSP_MATRICULA           + " TEXT, " +                ConstantesBaseDatos.TABLE_FOTOS_FECHA_CARGA              + " TEXT, " +                "FOREIGN KEY (" + ConstantesBaseDatos.TABLE_FOTOS_SUSP_MATRICULA + ") REFERENCES " +                ConstantesBaseDatos.TABLE_SUSPENSIONES + "(" + ConstantesBaseDatos.TABLE_SUSPENSIONES_MATRICULA + "))";        db.execSQL(queryCrearTablaPersona);        db.execSQL(queryCrearTablaUsuario);        db.execSQL(queryCrearTablaSuspension);        db.execSQL(queryCrearTablaFotos);    }    @Override    public void onUpgrade(SQLiteDatabase db, int oldVersion, int newVersion) {        db.execSQL("DROP TABLE IF EXIST " + ConstantesBaseDatos.TABLE_SUSPENSIONES);        db.execSQL("DROP TABLE IF EXIST " + ConstantesBaseDatos.TABLE_USUARIO);        db.execSQL("DROP TABLE IF EXIST " + ConstantesBaseDatos.TABLE_PERSONA);        db.execSQL("DROP TABLE IF EXIST " + ConstantesBaseDatos.TABLE_FOTOS);        onCreate(db);    }    /**     * método que permite insertar en SQLite las suspensiones que vendran de la base de datos remota     * a través de un Web Service.     */    public void InsertarSuspensionSQLite(ContentValues contentValues){        SQLiteDatabase db = this.getWritableDatabase();        try {            db.insert(ConstantesBaseDatos.TABLE_SUSPENSIONES, null, contentValues);        }catch (android.database.sqlite.SQLiteConstraintException e){            Log.i("LLAVE EXISTENTE", "ya se encuentra esta suspension en SQLite");        }        db.close();    }    //Procesar suspension y almacenarla en SQLite    public void RegistrarSuspensionProcesada(ContentValues contentValues){        SQLiteDatabase db = this.getWritableDatabase();        db.update(TABLE_SUSPENSIONES, contentValues, "SUSP_MATRICULA=" + contentValues.get("SUSP_MATRICULA"), null);        db.close();    }    public void RegistrarSuspensionFotosMatricula(ContentValues contentValues){        SQLiteDatabase db = this.getWritableDatabase();        db.insert( TABLE_FOTOS, null, contentValues );        db.close();    }    public byte[] ObtenerFotoSuspension(String numSuspension){        String query = "SELECT " + ConstantesBaseDatos.TABLE_FOTOS_FOTOBLOB; //COMPLETAR CONSULTA        SQLiteDatabase db = this.getWritableDatabase();        Cursor registros = db.rawQuery(query, null);        byte[] image = registros.getBlob(1);        return image;    }    //Metodo full, se obtienen todas las ordenes de suspension que se encuentra en SQLite    public ArrayList<Suspension> obtenerSuspensionesSQLite(String estado, String usuario){        ArrayList<Suspension> supensiones = new ArrayList<>();        String query = "SELECT SUSP_MATRICULA,  SUSP_NUM_PROCESO, SUSP_NUM_MEDIDOR, SUSP_SUSCRIPTOR, SUSP_CICLO, SUSP_MUNICIPIO, SUSP_DIRECCION, " +                        "SUSP_FECHA_ACTI, SUSP_TIPO_ACTI, SUSP_COD_ACCION, SUSP_DESCR_ACCION, SUSP_COD_TECNICO, SUSP_GLOSA, SUSP_PROVEEDOR, " +                "SUSP_FECHA_CARGA, SUSP_USUARIO, SUSP_ESTADO, SUSP_NUM_STICKER, SUSP_ESTADO_STICKER, SUSP_SELLOSERIAL, SUSP_SELLOSERIAL_ESTADO, " +                "SUSP_COINC_MAT_MEDI, SUSP_CON_PAGO, SUSP_TIENE_ENERGIA, SUSP_LECTURA, SUSP_NOM_CONTACTO, SUSP_NUM_CONTACTO,  SUSP_OBSERVACIONES, " +                "SUSP_RECHAZADO,  SUSP_FOTO, SUSP_LATITUD, SUSP_LONGITUD, SUSP_FECHA_EJECU, SUSP_FECHA_CARGA " +                "FROM " + ConstantesBaseDatos.TABLE_SUSPENSIONES +                " WHERE SUSP_ESTADO like '" + estado + "' and SUSP_USUARIO like '" + usuario + "'" ;//                " AND " + ConstantesBaseDatos.TABLE_SUSPENSIONES_FECHA_CARGA + " = '" + fechaCarga + "'";        SQLiteDatabase db = this.getWritableDatabase();        Cursor registros = db.rawQuery(query, null);        while (registros.moveToNext()){            Suspension suspensionActual = new Suspension();            suspensionActual.setSUSP_MATRICULA(registros.getString(0));            suspensionActual.setSUSP_NUM_PROCESO(registros.getString(1));            suspensionActual.setSUSP_NUM_MEDIDOR(registros.getString(2));            suspensionActual.setSUSP_SUSCRIPTOR(registros.getString(3));            suspensionActual.setSUSP_CICLO(registros.getString(4));            suspensionActual.setSUSP_MUNICIPIO(registros.getString(5));            suspensionActual.setSUSP_DIRECCION(registros.getString(6));            suspensionActual.setSUSP_FECHA_ACTI(registros.getString(7));            suspensionActual.setSUSP_TIPO_ACTI(registros.getString(8));            suspensionActual.setSUSP_COD_ACCION(registros.getString(9));            suspensionActual.setSUSP_DESCR_ACCION(registros.getString(10));            suspensionActual.setSUSP_COD_TECNICO(registros.getString(11));            suspensionActual.setSUSP_GLOSA(registros.getString(12));            suspensionActual.setSUSP_PROVEEDOR(registros.getString(13));            suspensionActual.setSUSP_FECHA_CARGA(registros.getString(14));            suspensionActual.setSUSP_USUARIO(registros.getString(15));            suspensionActual.setSUSP_ESTADO(registros.getString(16));            suspensionActual.setSUSP_NUM_STICKER(registros.getString(17));            suspensionActual.setSUSP_ESTADO_STICKER(registros.getString(18));            suspensionActual.setSUSP_SELLOSERIAL(registros.getString(19));            suspensionActual.setSUSP_SELLOSERIAL_ESTADO(registros.getString(20));            suspensionActual.setSUSP_COINC_MAT_MEDI(registros.getString(21));            suspensionActual.setSUSP_CON_PAGO(registros.getString(22));            suspensionActual.setSUSP_TIENE_ENERGIA(registros.getString(23));            suspensionActual.setSUSP_LECTURA(registros.getString(24));            suspensionActual.setSUSP_NOM_CONTACTO(registros.getString(25));            suspensionActual.setSUSP_NUM_CONTACTO(registros.getString(26));            suspensionActual.setSUSP_OBSERVACIONES(registros.getString(27));            suspensionActual.setSUSP_RECHAZADO(registros.getString(28));            suspensionActual.setSUSP_FOTO(registros.getString(29));            suspensionActual.setSUSP_LATITUD(registros.getString(30));            suspensionActual.setSUSP_LONGITUD(registros.getString(31));            suspensionActual.setSUSP_FECHA_EJECUCION(registros.getString(32));            suspensionActual.setSUSP_FECHA_CARGA(registros.getString(33));            //SE DEBE HACER OTRA SEGUNDA CONSULTA PARA LAS FOTOS SE OBTIENE EL byte[] y luego debe convertir a decodeByteToBitmap            //Y LUEGO DE Bitmap a String encodeBitmapToString y hay si se agrega al ArrayList<String> que tiene Suspension            //byte[] image = cursor.getBlob(1);            String query_fotos = "SELECT " + ConstantesBaseDatos.TABLE_FOTOS_FOTOBLOB + " FROM " + ConstantesBaseDatos.TABLE_FOTOS +                    " WHERE  " + ConstantesBaseDatos.TABLE_FOTOS_SUSP_MATRICULA + " like '" + suspensionActual.getSUSP_MATRICULA() +                    "' AND " + ConstantesBaseDatos.TABLE_FOTOS_FECHA_CARGA + " like '" + suspensionActual.getSUSP_FECHA_CARGA() + "'";            Cursor fotos = db.rawQuery(query_fotos, null);            ArrayList<String> fotos_cadena = new ArrayList<>();            while (fotos.moveToNext()){                byte [] image = fotos.getBlob(0);                Bitmap bitmap = DbBitmapUtility.decodeByteToBitmap(image);                String foto_cadena = DbBitmapUtility.encodeBitmapToString(bitmap);                fotos_cadena.add(foto_cadena);                //Log.e("Foto_String SQlite: ", "SUSPENSION: " + suspensionActual.getSUSP_MATRICULA() + " : ----- : " +foto_cadena);            }            //AGREGO LAS FOTOS AL ArrayList<String> fotos de la suspension actual            suspensionActual.setFotos(fotos_cadena);            //AGREGO LA SUSPENSION ACTUAL AL ArrayList<Suspension>            supensiones.add(suspensionActual);        }        db.close();        return supensiones;    }    //implementada para mostrar la cantidad de Suspensiones cargadas en SQLite segun usuario y fecha    public int obtenerCantSuspensionesBD(String user, String fechaCarga){        int total = 0;        String query = "SELECT count(*) FROM " + ConstantesBaseDatos.TABLE_SUSPENSIONES +                " WHERE " + ConstantesBaseDatos.TABLE_SUSPENSIONES_USUARIO + " like '" + user + "'" +                " AND " + ConstantesBaseDatos.TABLE_SUSPENSIONES_FECHA_CARGA + " like '" + fechaCarga + "'";        SQLiteDatabase db = this.getWritableDatabase();        Cursor registros = db.rawQuery(query, null);        registros.moveToFirst();        total = registros.getInt(0);        registros.close();        db.close();        return total;    }    public int obtenerCantSuspensionesEstadoSQLite(String estado, String usuario){        int total = 0;        String query = "select count(*) from suspensiones WHERE SUSP_ESTADO like '"+ estado + "' and SUSP_USUARIO like '" + usuario + "'";        //Toast.makeText(context, query + total, Toast.LENGTH_SHORT).show();        SQLiteDatabase db = this.getWritableDatabase();        Cursor registros = db.rawQuery(query, null);        registros.moveToFirst();        total = registros.getInt(0);        //Toast.makeText(context, "TOTAL ------> " + total, Toast.LENGTH_SHORT).show();        registros.close();        db.close();        db.close();        return total;    }}